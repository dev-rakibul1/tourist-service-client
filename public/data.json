[
  {
    "title": "What is difference between SQL and NoSQL ?",
    "description": "SQL is the programming language used to interface with relational databases. Relational databases model data as records in rows and tables with logical links between them. Example :- 1) These databases have fixed or static or predefined schema. 2) These databases are not suited for hierarchical data storage. 3) These databases are best suited for complex queries. 4) Vertically Scalable.______NoSQL is a class of DBMs that are non-relational and generally do not use SQL. Example :- 1)They have dynamic schema. 2) These databases are best suited for hierarchical data storage. 3) These databases are not so good for complex queries. 4) Horizontally scalable "
  },
  {
    "title": "What is JWT, and how does it work?",
    "description": "JSON Web Token (JWT) is an open standard (RFC 7519) for securely transmitting information between parties as JSON object. The purpose of using JWT is not to hide data but to ensure the authenticity of the data. JWT is signed and encoded, not encrypted. Basically the identity provider IdP generates a JWT certifying user identity and Resource server decodes and verifies the authenticity of the token using secret salt, public key."
  },
  {
    "title": "What is the difference between javascript and NodeJS?",
    "description": "JavaScript is a client-side scripting language that is lightweight, cross-platform, and interpreted. Both Java and HTML include it. Node.js, on the other hand, is a V8-based server-side programming language. NODEJS: NodeJS is a cross-platform and opensource Javascript runtime environment that allows the javascript to be run on the server-side. Nodejs allows Javascript code to run outside the browser. Nodejs comes with a lot of modules and mostly used in web development. "
  },
  {
    "title": "How does NodeJS handle multiple requests at the same time?",
    "description": "NodeJS receives multiple client requests and places them into EventQueue. NodeJS is built with the concept of event-driven architecture. NodeJS has its own EventLoop which is an infinite loop that receives requests and processes them. EventLoop is the listener for the EventQueue. If NodeJS can process the request without I/O blocking then the event loop would itself process the request and sends the response back to the client by itself. But, it is possible to process multiple requests parallelly using the NodeJS cluster module or worker_threads module. "
  }
]
